{"version":3,"sources":["utils.js","components/PostMarkup.js","components/CommentMarkup.js","components/Post.js","components/Header.js","components/Footer.js","components/Page.js","components/Router.js","App.js","serviceWorker.js","index.js"],"names":["getAPI","url","fetch","then","blob","json","getTopIDs","getStory","id","concat","counter","module","exports","range","start","stop","step","Array","from","length","_","i","getDiff","unix","timeString","UNIX_timestamp","a","Date","year","getFullYear","month","getMonth","getDate","getHours","getMinutes","getSeconds","unixConverter","ms","getTime","millisec","seconds","toFixed","minutes","hours","days","msConverter","elementsRandomColor","elementsArray","map","elem","console","log","style","backgroundColor","Math","floor","random","toString","fetchData","arr","Promise","resolve","reject","array","index","obj","push","catch","e","error","setTimeout","walkBackComments","maxNum","top100","num","objs","type","hostURL","hostname","URL","replace","commentsLink","post","kids","checkRoute","routeName","window","location","hash","checkLoaded","item","isArray","key","hasOwnProperty","isEmpty","filterShowStories","stories","all","sort","b","time","reverse","encodeStr","base","query","encodeURI","PostMarkup","props","alternateMarkup","text","href","react_default","createElement","className","utils","src","target","rel","title","score","by","pathname","CommentMarkup","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","original","assertThisInitialized","parentID","_this2","findOriginal","parent","setState","str","slice","slicer","ReactHtmlParser","Component","Post","indexes","posts","data","chunkData","chunkShowNew","outerIndex","components_CommentMarkup","components_PostMarkup","renderMarkup","Header","setIndex","Appname","links","link","Footer","Page","fullData","fullComments","chunkComments","fullShowNew","headerLinks","process","footerLinks","updatePageState","bind","dataToGet","numToGet","items","comments","filter","counterAndChunk","paginate","toConsumableArray","_this3","prevState","count","sliceStart","sliceEnd","chunk","document","querySelector","color","newState","_this4","colorLinks","getData","result","ShowPageText","components_Post","_this5","components_Header","renderBodyContent","onClick","components_Footer","Router","HashRouter","basename","Route","exact","path","component","components_Page","App","components_Router","Boolean","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.44f1162b.chunk.js","sourcesContent":["function getAPI(url) {\n\treturn fetch(url)\n\t\t.then(blob => blob.json())\n\t\t.then(json => json)\n}\n//add type, rgba, hex\n//add color range or name\nfunction randomHex() {\n\t// returns random hex\n\treturn '#' + Math.floor(Math.random() * 16777215).toString(16)\n}\n\nfunction elementsRandomColor(elementsArray) {\n\telementsArray = Array.from(elementsArray)\n\tlet map = elementsArray.map((elem) => {\n\t\tconsole.log(elem)\n\t\treturn elem.style.backgroundColor = randomHex()\n\t})\n\n}\n// get array of ids\nfunction getTopIDs(url) {\n\treturn fetch(url).then(blob => blob.json()).then(json => json)\n}\n// returns a promise resolves to an object\nfunction getStory(id) {\n\tlet url = `https://hacker-news.firebaseio.com/v0/item/${id}.json?print=pretty`\n\treturn fetch(url).then(blob => blob.json()).then(json => json)\n}\n\nfunction fetchData(url) {\n\tconsole.log(url)\n\tlet arr = []\n\treturn new Promise((resolve, reject) => {\n\t\tgetTopIDs(url).then(array => {\n\t\t\tarray.map((id, index) => {\n\t\t\t\treturn id\n\t\t\t}).map((id, index) => {\n\t\t\t\tgetStory(id).then(obj => {\n\t\t\t\t\tarr.push(obj)\n\t\t\t\t}).catch(e => console.error(e))\n\t\t\t})\n\t\t})\n\t\tsetTimeout(function() {\n\t\t\tresolve(arr)\n\t\t}, 2000)\n\t})\n}\n// check if this route\nfunction checkRoute(routeName){\n    // works for both dev and prod\n        routeName = `#/${routeName}`\n        // console.log('route', routeName)\n        let hash = window.location.hash\n        // console.log('hash', hash)\n        return (hash === routeName ? true : false)\n}\n// get max id and 100 previous\nfunction walkBackComments() {\n\treturn getAPI(\"https://hacker-news.firebaseio.com/v0/maxitem.json?print=pretty\")\n\t\t.then(maxNum => {\n\t\t\tlet top100 = []\n\t\t\tlet i = 0\n\t\t\twhile(i < 100) {\n\t\t\t\tlet num = maxNum - i\n\t\t\t\ttop100.push(num)\n\t\t\t\ti++\n\t\t\t}\n\t\t\tlet objs = top100.map(id => {\n\t\t\t\treturn getStory(id)\n\t\t\t\t\t.then(obj => {\n\t\t\t\t\t\t// reject nulls\n\t\t\t\t\t\tif(obj) {\n\t\t\t\t\t\t\tif(obj.type === 'comment') {\n\t\t\t\t\t\t\t\treturn obj\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t})\n\t\t\tconsole.log('walk back okay')\n\t\t\treturn objs\n\t\t})\n}\n\nfunction unixConverter(UNIX_timestamp) {\n\t// https://stackoverflow.com/questions/847185/convert-a-unix-timestamp-to-time-in-javascript\n\tlet a = new Date(UNIX_timestamp * 1000)\n\tlet months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n\tlet year = a.getFullYear()\n\tlet month = months[a.getMonth()]\n\tlet date = a.getDate()\n\tlet hour = a.getHours()\n\tlet min = a.getMinutes()\n\tlet sec = a.getSeconds()\n\tlet time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec\n\treturn time\n}\n// https://stackoverflow.com/questions/19700283/how-to-convert-time-milliseconds-to-hours-min-sec-format-in-javascript\n// ms to human readable time\nfunction msConverter(millisec) {\n\tlet seconds = (millisec / 1000).toFixed()\n\tlet minutes = (millisec / (1000 * 60)).toFixed()\n\tlet hours = (millisec / (1000 * 60 * 60)).toFixed()\n\tlet days = (millisec / (1000 * 60 * 60 * 24)).toFixed()\n\tif(seconds < 60) {\n\t\treturn `${seconds} seconds ago`\n\t} else if(minutes < 60) {\n\t\treturn `${minutes} minutes ago`\n\t} else if(hours < 24) {\n\t\treturn `${hours} hours ago`\n\t} else {\n\t\treturn `${days} days ago`\n\t}\n}\n\nfunction getDiff(unix) {\n\t// convert unix to time date string\n\tlet timeString = unixConverter(unix)\n\t// convert to new date ms object\n\tlet ms = new Date(timeString).getTime()\n\t// subract from current time\n\tlet diff = new Date().getTime() - ms\n\t// convert diff to hours\n\tlet result = msConverter(diff)\n\treturn result\n}\n// create a link to comments\nfunction commentsLink(post) {\n\t// if no kids, undefined, send to ID page\n\tif(!post.kids) {\n\t\treturn 'discuss'\n\t} else {\n\t\treturn `${post.kids.length} comments`\n\t}\n}\n// shows link to the name of website post came from - i.e. medium.com\nfunction hostURL(url) {\n\t// if no url, return null in ternary\n\tif(!url) {\n\t\treturn ''\n\t}\n\t// console.log(url)\n\tlet urlObj = new URL(url)\n\tlet hostname = urlObj.hostname\n\thostname = hostname.replace(/^(www\\.)/, \"\");\n\treturn hostname\n}\n// check if object empty\nfunction isEmpty(obj) {\n    for(var key in obj) {\n        if(obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n}\n// check if array has length inisde render - t for length\nfunction checkLoaded(item){\n    if(Array.isArray(item)){\n        return !item.length ? false : true\n    } else if(!(Array.isArray(item)) && typeof \"object\") {\n        return !isEmpty(item)\n    } else if(typeof item === 'string'){\n        return !item.length ? false : true\n    }\n}\n\n\nfunction filterShowStories(){\n    getAPI(\" https://hacker-news.firebaseio.com/v0/showstories.json?print=pretty\")\n    .then(stories => {\n        Promise.all(\n            stories.map(id => {\n                // console.log(id)\n                return getStory(id).then(obj => {\n                    // reject nulls\n                    return obj\n                });\n                //push resolved promises into another array\n            })\n        ).then(stories => {\n            return stories = stories.sort((a, b) => {\n                return a.time - b.time\n            }).reverse()\n        })\n    })\n}\n// encode text in string\nfunction encodeStr(base, query){\n\treturn encodeURI(`${base}${query}`)\n}\n// takes an array of results - returns value then increments\n// holds values in a closure\nconst countBy30 = (function () {\n  var counter = 0\n  return function () {\n      counter = counter += 30\n      return counter\n  }\n})();\nfunction range(start, stop, step){\n    return  Array.from({ length: (stop - start) / step }, (_, i) => start + (i * step))\n}\n\nmodule.exports = {\n    range: range,\n    getAPI: getAPI,\n\tgetDiff: getDiff,\n\telementsRandomColor: elementsRandomColor,\n\tgetTopIDs: getTopIDs,\n\tgetStory: getStory,\n\tfetchData: fetchData,\n\twalkBackComments: walkBackComments,\n\thostURL: hostURL,\n\tcommentsLink: commentsLink,\n    checkRoute: checkRoute,\n    checkLoaded: checkLoaded,\n    filterShowStories: filterShowStories,\n    encodeStr: encodeStr,\n}\n","import React from 'react'\nimport utils from '../utils'\n\n\nfunction PostMarkup(props){\n    let post = props.post.post\n    // console.log('props', props.post)\n    let index = props.post.index\n    let hostURL = props.post.hostURL\n    let getDiff = props.post.getDiff\n    let commentsLink = props.post.commentsLink\n    // render this markup when needed'\n    function alternateMarkup(text, href, index){\n        return(\n            <div className={text} key={index}>\n                <a href={href}>&nbsp;{text}</a>\n            </div>\n        )\n    }\n    // don't render indexes on jobs route\n    return (\n    <div className=\"Post\" key={index}>\n    { !utils.checkRoute('jobs') && !utils.checkRoute('comments') ?\n        <div className=\"rank\">\n            <div>{index}.</div> </div>: null\n\n    }\n    { !utils.checkRoute('jobs') ?\n    <div className=\"vote\">\n        <a href={`https://news.ycombinator.com/vote?id=${post.id}&how=up&goto=news`}>\n        <div><img src=\"https://news.ycombinator.com/grayarrow2x.gif\"/></div>\n        </a>\n    </div>: null\n\n    }\n    \n    <div className=\"text-container\">\n        <div className=\"title\">\n            <a className=\"Post-link\" href={post.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                {post.title}\n            </a>\n            <a id=\"host-url\" href={`http://${hostURL(post.url)}`} target=\"_blank\" rel=\"noopener noreferrer\">\n            &nbsp;{!hostURL(post.url) ? null : `(${hostURL(post.url)})` }\n            </a>\n        </div>\n        <div className=\"subtext\">\n            <div className=\"score\">{post.score}&nbsp;points by {''}\n                <a href={`https://news.ycombinator.com/user?id=${post.by}`}>{''}{post.by}</a>\n            </div>\n            <div className=\"age\">\n                {''}\n                <a href={`https://news.ycombinator.com/item?id=${post.id}`}>&nbsp;{getDiff(post.time)}</a>\n            </div>\n            {\n                window.location.pathname === '/' || window.location.pathname === '/news' ?\n                alternateMarkup('hide',`https://news.ycombinator.com/hide?id=${post.id}&goto=newest`, index ) :\n                null\n            }\n            {\n                window.location.pathname === \"/newest\" ?\n                [\n                    alternateMarkup('hide',`https://news.ycombinator.com/hide?id=${post.id}&goto=newest` ,index),\n                    alternateMarkup('past', utils.encodeStr(`https://hn.algolia.com/?query=`, post.title), index+100),\n                    alternateMarkup('web', utils.encodeStr(`https://www.google.com/search?q=`, post.title), index+200)\n                ]\n                    : null\n\n            }\n            <div className=\"comment\">\n                <a href={`https://news.ycombinator.com/item?id=${post.id}`}>&nbsp;{commentsLink(post)}</a>\n            </div>\n        </div>\n        </div>\n    </div>)\n}\nexport default  PostMarkup\n","import React, {Component} from \"react\"\nimport utils from '../utils'\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\n\n// takes an object with array of data and some functions\nclass CommentMarkup extends Component {\n    constructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\toriginal: \"\"\n\t\t};\n        let that = this\n\n        this.index = props.post.index\n        this.hostURL = props.post.hostURL\n        this.getDiff = props.post.getDiff\n        // console.log('props', this.props )\n\t}\n    // goes up the tree until it find parent\n    findOriginal(parentID){\n    //call api on parent\n        return utils.getAPI(`https://hacker-news.firebaseio.com/v0/item/${parentID}.json?print=pretty`)\n        .then(item => {\n            // if parent is story done\n            if(item.type === 'story'){\n                this.setState({\n                    original: item\n                })\n                return\n            } else {\n                // call again with new parent val\n                // return 'none'\n                this.findOriginal(item.parent)\n\n\n            }\n        })\n\n    }\n    componentDidMount(){\n        // console.log('parent',this.props.post.post.parent)\n        this.findOriginal(this.props.post.post.parent)\n    }\n    // let origin = findOriginal(post.parent)\n    // // setTimeout(function(){\n    //     console.log('origin', origin)\n    // // },5000)\n    slicer(str){\n        if(!str){\n            return false\n        }\n        if(str.length >= 30){\n            return str.slice(0,30)\n        } else {\n            return str\n        }\n\n\n    }\n\n    render(){\n        // if(!this.post){\n        //     console.log('nothing')\n        //     return\n        // }\n        let originalPost = this.state.original.title\n        let post = this.props.post.post\n        // console.log('post', post)\n        return (\n            <div className={`Post ${utils.checkRoute('comments') ? 'comment' : ''}`}>\n\n            <div className=\"subtext post-child\">\n                <div className=\"vote\">\n                    <span><img src=\"https://news.ycombinator.com/grayarrow2x.gif\"/></span>\n                </div>\n                <div className=\"by\">\n                    {post.by}\n                </div>\n                <span className=\"age\">\n                {''}\n                    <a href={`https://news.ycombinator.com/item?id=${post.id}`}>&nbsp;{this.getDiff(post.time)}</a>\n                </span>\n                <span className=\"parent\">\n                {''}\n                    <a href={`https://news.ycombinator.com/ q  q item?id=${post.parent}`}>&nbsp;parent</a>\n                </span>\n                {''}\n                <span className=\"orignal-post\">\n                {''}\n                <a href={this.state.original.url}>&nbsp;on: {this.slicer(this.state.original.title)}</a>\n\n                </span>\n\n\n            </div>\n            <div className=\"text-container post-child\">\n            <div className=\"title\">\n            {ReactHtmlParser(post.text)}\n            </div>\n            </div>\n            </div>)\n    }\n}\n\nexport default CommentMarkup\n","import React from \"react\"\nimport PostMarkup from \"./PostMarkup\"\nimport CommentMarkup from \"./CommentMarkup\"\nimport utils from '../utils'\n\n// Post takes an array or an object. Login sorts them\nfunction Post(props) {\n    console.log('props', props)\n    let indexes\n    let posts = props.data\n    // console.log('posts', posts)\n    // if props.data an object - do this\n    if(!(Array.isArray(props.data)) && typeof \"object\") {\n        indexes = props.data.indexes\n        posts = props.data.chunkData || props.data.chunkShowNew\n    }\n    // if array inside array - do this\n    if(Array.isArray(props.data)){\n        posts = props.data[0]\n    }\n    function renderMarkup(post, index){\n        // console.log('POST', post)\n        if(!utils.checkRoute('comments')){\n            return(<PostMarkup key={index} post={\n               {\n                   post: post,\n                   index:indexes[index],\n                   hostURL: utils.hostURL,\n                   getDiff: utils.getDiff,\n                   commentsLink: utils.commentsLink\n               }  }/>\n           )\n       } else {\n           return(<CommentMarkup key={index}  post={ {\n               post: post,\n               index:index,\n               hostURL: utils.hostURL,\n               getDiff: utils.getDiff,\n               commentsLink: utils.commentsLink\n           } }/>\n            )\n       }\n    }\n\treturn posts.map((post, outerIndex) => {\n        // console.log('posts', posts)\n        return(\n            renderMarkup(post, outerIndex)\n            )\n        {/*return(<CommentMarkup key={outerIndex}  post={ {\n            post: post,\n            index:outerIndex,\n            hostURL: utils.hostURL,\n            getDiff: utils.getDiff,\n            commentsLink: utils.commentsLink\n        } }/>)\n        */}\n        // if post is still an array, loop again\n        {/*    return Array.isArray(post) ? post.map((item, innerIndex) => {\n                console.log('i', indexes[innerIndex])\n                   return (!utils.checkRoute('comments')  ?\n                   <PostMarkup key={innerIndex} post={\n                       {\n                           post: item,\n                           index:indexes[innerIndex],\n                           hostURL: utils.hostURL,\n                           getDiff: utils.getDiff,\n                           commentsLink: utils.commentsLink\n                       }  }/> :\n                       <CommentMarkup key={innerIndex}  post={ {\n                           post: item,\n                           index:innerIndex,\n                           hostURL: utils.hostURL,\n                           getDiff: utils.getDiff,\n                           commentsLink: utils.commentsLink\n                       } }/>\n\n                   )\n            })\n            :\n             (\n                !utils.checkRoute('comments')  ? <PostMarkup key={outerIndex} post={\n                    {\n                        post: post,\n                        index:indexes[outerIndex],\n                        hostURL: utils.hostURL,\n                        getDiff: utils.getDiff,\n                        commentsLink: utils.commentsLink\n                    }  }/> :\n\n                    <CommentMarkup key={outerIndex}  post={ {\n                        post: post,\n                        index:outerIndex,\n                        hostURL: utils.hostURL,\n                        getDiff: utils.getDiff,\n                        commentsLink: utils.commentsLink\n                    } }/>\n\n                )\n                */}\n\t})\n\n}\nexport default Post\n","import React from 'react'\n\nfunction Header(props) {\n    function setIndex(){\n        let index\n        if(process.env.NODE_ENV === \"development\"){\n            index = \"/index\"\n        } else if(process.env.NODE_ENV === \"production\"){\n            index = `https://chrisdel101.github.io`\n        } else {\n            console.error('No NODE_ENV set')\n        }\n        return index\n    }\n\treturn (<div className=\"Header\">\n        <div className=\"header-cell logo\">\n                {/*<a href={window.location.host + '/' + process.env.PUBLIC_URL}>*/}\n                <a href={setIndex() + process.env.PUBLIC_URL}>\n\n                <img src=\"https://news.ycombinator.com/y18.gif\"/>\n            </a>\n        </div>\n\t\t<div className=\"header-cell app-name\">\n            <a href={setIndex() + process.env.PUBLIC_URL}>\n                <strong>{props.Appname}</strong>\n            </a>\n        </div>\n\t\t<div className=\"header-cell login\">\n        <a href=\"#\">login</a>\n        </div>\n            <div className=\"header-links\">\n            {\n                props.links.map((link, index) => {\n                    return <div className=\"header-cell header-link\" key={index}><a href={link.url}>{link.link}</a></div>\n                })\n            }\n            </div>\n\t</div>)\n}\nexport default Header\n","import React from 'react'\n\nfunction Footer(props){\n    return(\n        <footer className=\"Footer\">\n        <div className=\"footer-links\">\n        {\n            props.links.map((link, index) => {\n                return <div className=\"footer-link\" key={index}><a href={link.url}>{link.link}</a></div>\n            })\n        }\n        </div>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React, {Component} from \"react\";\nimport Post from \"./Post\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport data from \"../data/post_data.json\";\nimport utils from \"../utils\";\n\n// import getJSON from \"../utils\"\nclass Page extends Component {\n\tconstructor(props) {\n        // console.log('props page', props)\n\t\tsuper(props)\n\t\tthis.state = {\n            counter: 0,\n\t\t\tfullData: [],\n            chunkData: [],\n            fullComments: [],\n\t\t\tchunkComments: [],\n            fullShowNew: [],\n            chunkShowNew: [],\n            stories: [],\n            headerLinks: [\n                {\n                    link: \"new\",\n                    url: `${process.env.PUBLIC_URL}/#/newest`\n                },\n                {\n                    link: \"comments\",\n                    url: `${process.env.PUBLIC_URL}/#/comments`\n                },\n                {\n                    link: \"show\",\n                    url: `${process.env.PUBLIC_URL}/#/show`\n                },\n                {\n                    link: \"ask\",\n                    url: `${process.env.PUBLIC_URL}/#/ask`\n                },\n                {\n                    link: \"jobs\",\n                    url: `${process.env.PUBLIC_URL}/#/jobs`\n                },\n                {\n                    link: \"submit\",\n                    url: \"https://news.ycombinator.com/submit\"\n                }\n            ],\n            footerLinks: [\n                {\n                    link: \"Guildlines\",\n                    url: \"https://news.ycombinator.com/newsguidelines.html\"\n                },\n                {\n                    link: \"FAQ\",\n                    url: \"https://news.ycombinator.com/newsfaq.html\"\n                },\n                {\n                    link: \"Support\",\n                    url: \"mailto:hn@ycombinator.com\"\n                },\n                {\n                    link: \"API\",\n                    url: \"https://github.com/HackerNews/API\"\n                },\n                {\n                    link: \"Security\",\n                    url: \"https://news.ycombinator.com/security.html\"\n                },\n                {\n                    link: \"Lists\",\n                    url: \"https://news.ycombinator.com/lists\"\n                },\n                {\n                    link: \"Bookmarklet\",\n                    url: \"https://news.ycombinator.com/bookmarklet.html\"\n                },\n                {\n                    link: \"Legal\",\n                    url: \"http://www.ycombinator.com/legal/\"\n                },\n                {\n                    link: \"Apply to YC\",\n                    url: \"http://www.ycombinator.com/apply/\"\n                },\n                {\n                    link: \"Contact\",\n                    url: \"mailto:hn@ycombinator.com\"\n                },\n            ]\n\t\t}\n        this.updatePageState = this.updatePageState.bind(this);\n\n    }\n    // use to get data if not passed in my router\n    getData(dataToGet, numToGet) {\n        utils.getAPI(\"https://hacker-news.firebaseio.com/v0/maxitem.json?print=pretty\")\n        // get single max number\n        .then(maxNum => {\n            //\t insert ids into URL - get array of promises\n            Promise.all(\n                Array.from(\n                    {\n                        length: numToGet || 100\n                    },\n                    (_, i) => maxNum - i\n                    // subtract one from max, get 100 top nums\n                ).map(id => {\n                    return utils.getStory(id)\n                    .then(obj => {\n                        // reject nulls here\n                        if (obj) {\n                            // use func to get comments\n                            if(dataToGet === \"comment\"){\n                                // filter out by type\n                                if (obj.type === \"comment\") {\n                                    return obj;\n                                }\n                            } else if(dataToGet === \"shownew\"){\n                                if(obj.type !== \"comment\"){\n                                    return obj\n                                }\n                            }\n                        }\n                    })\n                })\n            ).then(items => {\n                if(dataToGet === 'comment'){\n                    // filter out undefined\n                    let comments = items.filter(obj => obj)\n                    // return paginate obj\n                    let counterAndChunk = this.paginate(comments)\n                    this.setState({\n                        fullComments: [...comments],\n                        chunkComments: [...counterAndChunk.chunkComments],\n                        counter: counterAndChunk.counter,\n                        indexes:  counterAndChunk.indexes\n                    })\n                    // console.log('state', this.state)\n                } else if(dataToGet === 'shownew'){\n                    console.log('show')\n                    let showNews = items.map((item) => {\n                        // filter undefined\n                        if(item){\n                            // filter out comments\n                            if(item.type === 'story'){\n                                // let re = /^Show HN/i\n                                // check if starts with SHOW HN\n                                // console.log(item.title)\n                                this.filterShowStories()\n                                console.log('state', this.state)\n                                // if(re.test(item.title)){\n                                //     console.log(item)\n                                //     return item\n                                // }\n                            }\n                            // if()\n                        }\n                    })\n                } else {\n                    console.error(`Error: fetch type needed`)\n                }\n            })\n        })\n    }\n    // sorts stories by time - get newest stories\n    filterShowStories(){\n        utils.getAPI(\" https://hacker-news.firebaseio.com/v0/showstories.json?print=pretty\")\n        .then(stories => {\n            Promise.all(\n                stories.map(id => {\n                    // console.log(id)\n                    return utils.getStory(id).then(obj => {\n                        // reject nulls\n                        return obj\n                    })\n                })\n            ).then(stories => {\n                // console.log(stories)\n                stories = stories.sort((a, b) => {\n                    return a.time - b.time\n                }).reverse()\n                let counterAndChunk = this.paginate(stories)\n                console.log(counterAndChunk)\n                this.setState(prevState => ({\n                    fullShowNew: [...prevState.stories, stories],\n                    chunkShowNew: counterAndChunk,\n                    counter: counterAndChunk.counter\n                    // chunkShowNew: counterAndChunk.chunkData,\n                    // counter: counterAndChunk.count,\n                    // indexes: counterAndChunk.indexes\n                }))\n            })\n        })\n    }\n    paginate(arr) {\n        console.log('Arr', arr)\n    //increment and get current count\n        let count = this.state.counter + 30\n        // console.log('count', count)\n        let sliceStart = count - 30\n // console.log('start', sliceStart)\n     let sliceEnd = count\n/* console.log('end', sliceEnd) */\n        let indexes = utils.range(sliceStart+1, sliceEnd+1, 1)\n        let chunk = arr.slice(sliceStart, sliceEnd)\n        /* console.log('chunk', chunk) */\n        if(utils.checkRoute('comments')){\n            return {\n                chunkComments: chunk,\n                counter: count,\n                indexes: indexes\n            }\n        } else if(utils.checkRoute('shownew')){\n            console.log('chunk', chunk)\n            return {\n                chunkShowNew: chunk,\n                counter: count,\n                indexes: indexes\n            }\n        } else {\n            return {\n                chunkData: chunk,\n                counter: count,\n                indexes: indexes\n            }\n\n        }\n    }\n\n    colorLinks(){\n        if(process.env.NODE_ENV === 'production'){\n            // don't query on index route\n            if(window.location.hash === '#/'){\n                return\n            } else {\n                let hash = window.location.hash\n                let elem = document.querySelector(`[href='/hackernews/${hash}']`)\n                elem.style.color = \"#ffffff\"\n            }\n\n        }\n    }\n    updatePageState(state) {\n        // let arr\n        if(utils.checkRoute('comments')){\n            let arr = state.fullComments\n            let newState = this.paginate(arr)\n            // console.log('new', newState.chunkComments)\n            this.setState({\n                chunkComments: newState.chunkComments,\n                counter: newState.counter,\n                indexes: newState.indexes\n            })\n        } else if(utils.checkRoute('shownew')){\n            let arr = state.fullShowNew\n            if(Array.isArray(arr[0])){\n                arr = state.fullShowNew[0]\n            }\n            // let arr = state.fullShowNew[0]\n            console.log('a', arr)\n            let newState = this.paginate(arr)\n            console.log('new', newState)\n            this.setState({\n                chunkShowNew: newState,\n                counter: newState.counter\n            })\n        } else {\n            let arr = state.fullData\n            let newState = this.paginate(arr)\n            console.log('new', newState)\n            this.setState({\n                chunkData: newState,\n                counter: newState.counter\n            })\n        }\n    }\n\tcomponentDidMount() {\n        this.colorLinks()\n        // check if comments route\n\t\tif (utils.checkRoute('comments')) {\n\t\t\t// get comments and set state\n\t\t\tthis.getData(\"comment\")\n            // if not comments do this\n        } else if(utils.checkRoute('shownew')){\n            // this.getData(\"shownew\")\n            // console.log('show', this.state)\n            this.filterShowStories()\n\t\t} else {\n\t\t\tconsole.log(\"not comments\")\n\t\t\tthis.props.data.then(result => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tfullData: result\n\t\t\t\t\t}, () => {\n                        //paginate data on load\n                        let obj = this.paginate(this.state.fullData)\n                        // set first 30 to state\n                        this.setState({\n                            chunkData: obj,\n                            counter: obj.counter\n                        })\n                    })\n\t\t\t\t})\n\t\t\t\t.catch(e => console.error(`error: ${e}`));\n\t\t}\n\t}\n\t// render piece of text on show page\n\tShowPageText() {\n\t\tif (utils.checkRoute('show')) {\n\t\t\treturn (\n\t\t\t\t<div className=\"show-added-text\">\n\t\t\t\t\tPlease read the{\" \"}\n\t\t\t\t\t<a href=\"https://news.ycombinator.com/showhn.html\"> rules</a>. You can\n\t\t\t\t\talso browse the{\" \"}\n\t\t\t\t\t<a href={process.env.PUBLIC_URL + \"/#/shownew\"}>newest</a>{\" \"}\n\t\t\t\t\tShow HNs.{\" \"}\n\t\t\t\t</div>\n\t\t\t)\n\t\t} else {\n\t\t\treturn null\n\t\t}\n\t}\n    // check which markup to render- run inside render func\n    renderBodyContent(){\n        // if comments Page\n        if(utils.checkRoute('comments')){\n            // if state is loaded\n            if(utils.checkLoaded(this.state.fullComments)){\n                return(<div>\n                    <this.ShowPageText />\n                    {console.log('Render - Comment')}{\" \"}\n                    <Post data={this.state.chunkComments} />{\" \"}\n                    </div>\n                )\n            } else {\n                return(\n                        <div> Fetching Comments Data </div>\n                    )\n            }\n        } else if(utils.checkRoute('shownew')){\n            console.log('shownew')\n            if(utils.checkLoaded(this.state.fullShowNew)){\n                return(<div>\n                    {console.log('Render - show new')}{\" \"}\n                    <Post data={this.state.chunkShowNew} />{\" \"}\n                    </div>\n                )\n            }\n        } else {\n            if(utils.checkLoaded(this.state.fullData)){\n                if(utils.checkLoaded(this.state.chunkData)){\n                    console.log('STATE', this.state)\n                    return(<div>\n                        <this.ShowPageText />\n                        {console.log('Render-Data')}{\" \"}\n                        {\" \"}\n                        <Post data={this.state.chunkData} />{\" \"}\n                        </div>\n                    )\n                } else {\n                    return(\n                        <div> Fetching API Data </div>\n                    )\n                }\n            } else {\n                return(\n                    <div> Fetching Data API Data </div>\n                )\n            }\n\n        }\n    }\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Page\">\n\t\t\t\t<div className=\"page-inner-container\">\n\t\t\t\t\t<div className=\"header-container\">\n\t\t\t\t\t\t<Header\n\t\t\t\t\t\t\tAppname=\"Hacker News\"\n\t\t\t\t\t\t\tlinks={this.state.headerLinks}\n\t\t\t\t\t\t/>{\" \"}\n\t\t\t\t\t</div>{\" \"}\n    \t\t\t\t<div className=\"body-container\">\n    \t\t\t\t\t{\" \"}\n                        {this.renderBodyContent()}\n                        <div id=\"paginator\" onClick={() => {\n                            this.updatePageState(this.state)\n                        }}>More</div>\n    \t\t\t\t</div>{\" \"}\n                        <Footer links={this.state.footerLinks}/>\n                </div>{\" \"}\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default Page;\n","import React from 'react'\nimport { HashRouter, BrowserRouter, Route, Link, Switch } from \"react-router-dom\"\nimport Page from './Page'\nimport utils from '../utils'\n\n\nfunction Router(){\n    return(\n        <HashRouter basename={process.env.PUBLIC_URL}>\n        <div>\n            <Route exact path=\"/\" component={() => <Page data={utils.fetchData(\"https://hacker-news.firebaseio.com/v0/topstories.json?print=pretty\")} />}/>\n            <Route path=\"/newest\" component={() => <Page data={utils.fetchData(\"https://hacker-news.firebaseio.com/v0/newstories.json?print=pretty\")} />}/>\n            <Route path=\"/show\" component={() => <Page data={utils.fetchData(\"https://hacker-news.firebaseio.com/v0/showstories.json?print=pretty\")} />}/>\n            <Route path=\"/shownew\" component={Page}/>\n            <Route path=\"/ask\" component={() => <Page data={utils.fetchData(\"https://hacker-news.firebaseio.com/v0/askstories.json?print=pretty\")} />}/>\n            <Route path=\"/jobs\" component={() => <Page data={utils.fetchData(\"https://hacker-news.firebaseio.com/v0/jobstories.json?print=pretty\")} />}/>\n            <Route path=\"/comments\" component={Page}/>\n            <Route path=\"/best\" component={() => <Page data={utils.fetchData(\"https://hacker-news.firebaseio.com/v0/beststories.json?print=pretty\")} />}/>\n        </div>\n        </HashRouter>\n    )\n}\n\nexport default Router\n\n\n\n// <Route path=\"/newest\" component={Newest}/>\n// <Route path=\"/show\"   component={Show}/>\n// <Route path=\"/ask\"    component={Ask}/>\n// <Route path=\"/job\"    component={Job}/>\n","import React, {Component} from 'react'\nimport Page from './components/Page'\nimport Router from './components/Router'\nimport './App.css';\n\nclass App extends Component {\n\trender() {\n\t\treturn (<div className=\"App\">\n\t\t\t<Router/>\n\t\t</div>);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}